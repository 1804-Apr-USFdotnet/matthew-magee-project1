@model RestaurantProjectMVC.Models.Review

@{
    ViewBag.Title = "Edit";
}

<div class="columns">
    <div class="column">
        <section class="hero is-medium is-primary is-bold">
            <div class="hero-body">
                <div class="container">
                    <h1 class="title">
                        Editing @Model.Username's Review
                    </h1>
                </div>
            </div>
        </section>
    </div>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="columns is-centered">
            <div class="column is-5-tablet is-4-desktop is-3-widescreen">

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="field">
                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "input", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="field">
                        @Html.LabelFor(model => model.ReviewMessage, htmlAttributes: new { @class = "label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ReviewMessage, new { htmlAttributes = new { @class = "input", required = "required" } })
                            @Html.ValidationMessageFor(model => model.ReviewMessage, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="field">
                        @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "input", required = "required", pattern = @"\d(\.\d)? | 10" } })
                            @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="field">
                        @Html.LabelFor(model => model.profileURL, htmlAttributes: new { @class = "label" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.profileURL, new { htmlAttributes = new { @class = "input", required = "required" } })
                            @Html.ValidationMessageFor(model => model.profileURL, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="field">
                        @Html.LabelFor(model => model.RestarantId, "RestarantId", htmlAttributes: new { @class = "label" })
                        <div class="col-md-10">
                            @Html.DropDownList("RestarantId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.RestarantId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="button is-primary" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="column">
    <a class="button is-link" href="@Url.Action("Index", "Restaurants")">Back To All Restaurants</a>
</div>


<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
